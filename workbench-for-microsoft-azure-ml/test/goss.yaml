user:
  rstudio-server:
    exists: true
    uid: 999
    gid: 999
  # created in the startup script... and changeable by env var
  # but should still exist
  azureuser:
    exists: true
    uid: 1001
    gid: 1001

group:
  rstudio-server:
    exists: true
    gid: 999
  azureuser:
    exists: true
    gid: 1001

package:
  rstudio-server:
    installed: true
  # Necessary for `tlmgr` to work properly
  perl:
    installed: true
  # test all system packages
  {{range .Vars.syspkgs}}
  {{.}}:
      installed: true
  {{end}}

port:
  tcp:8787:
    listening: true
    ip:
    - 0.0.0.0
    skip: false
  tcp:5559:
    listening: true
    ip:
    - 127.0.0.1
    skip: false

process:
  rserver:
    running: true
    skip: false
  rstudio-launche:
    running: true
    skip: false

file:
  /etc/rstudio-server/license.lic:
    # currently does not exist
    # be sure it is NOT a directory
    exists: false
  /usr/lib/rstudio-server:
    exists: true
  /opt/python/{{.Env.PYTHON_VERSION}}/bin/python:
    exists: true
    filetype: symlink
  /opt/python/{{.Env.PYTHON_VERSION_ALT}}/bin/python:
    exists: true
    filetype: symlink
  /opt/python/jupyter/bin/python:
    exists: true
    filetype: symlink
  /opt/python/jupyter/bin/jupyter:
    exists: true
  # this file gets created at startup?
  # /var/lib/rstudio-server/r-versions:
  #   exists: false
  /usr/lib/rstudio-server/bin/rserver:
    exists: true
  /usr/lib/rstudio-server/bin/rstudio-server:
    exists: true
  /usr/lib/rstudio-server/bin/rstudio-launcher:
    exists: true
  /var/lib/rstudio-server/monitor/log:
    exists: true
    owner: rstudio-server
    group: rstudio-server
  /usr/lib/rstudio-server/bin/pwb-code-server/bin/code-server:
    exists: true
  # Old code-server location
  /usr/lib/rstudio-server/bin/code-server/bin/code-server:
    exists: false
  /etc/rstudio/vscode.conf:
    exists: true
  /tmp/startup.log:
    exists: true
    contains:
    - "!Error reading /etc/rstudio/rserver.conf:"
  /usr/local/bin/quarto:
    exists: true
    filetype: symlink
  /opt/.TinyTeX:
    exists: true
    filetype: directory
    mode: "0755"
  /opt/.TinyTeX/bin/x86_64-linux/tlmgr:
    exists: true
    filetype: symlink
    mode: "0777"
    linked-to: ../../texmf-dist/scripts/texlive/tlmgr.pl
  /opt/.TinyTeX/bin/x86_64-linux/tex:
    exists: true
    filetype: file
    mode: "0755"
  /opt/.TinyTeX/bin/x86_64-linux/pdflatex:
    exists: true
    filetype: symlink
    linked-to: pdftex
    mode: "0777"
  /opt/.TinyTeX/bin/x86_64-linux/pdftex:
    exists: true
    filetype: file
    mode: "0755"
  /usr/local/bin/tex:
    exists: true
    filetype: symlink
    linked-to: /opt/.TinyTeX/bin/x86_64-linux/tex
    mode: "0777"
  /usr/local/bin/pdflatex:
    exists: true
    filetype: symlink
    linked-to: /opt/.TinyTeX/bin/x86_64-linux/pdflatex
    mode: "0777"

command:
  "su rstudio-server -c 'touch /var/lib/rstudio-server/monitor/log/rstudio-server.log'":
    title: workbench_monitor_log_file_creates
    exit-status: 0
# Check product version
  "rstudio-server version":
    title: workbench_version_matches
    exit-status: 0
    stdout: [
       "{{ .Env.RSW_VERSION }}",
       "Workbench"
     ]
  "echo '{ \"cells\": [], \"metadata\": {}, \"nbformat\": 4, \"nbformat_minor\": 2}' | /opt/python/jupyter/bin/jupyter nbconvert --to notebook --stdin --stdout":
    title: jupyter_works
    timeout: 60000
    exit-status: 0
# Ensure correct python version
  "/opt/python/{{.Env.PYTHON_VERSION_ALT}}/bin/python --version":
    title: alternate_python_version_matches
    exit-status: 0
    stdout: [
        "{{.Env.PYTHON_VERSION_ALT}}"
    ]
# Ensure correct python version
  "/opt/python/{{.Env.PYTHON_VERSION}}/bin/python --version":
    title: python_version_matches
    exit-status: 0
    stdout: [
      "{{.Env.PYTHON_VERSION}}"
    ]
  "/opt/python/jupyter/bin/python --version":
    title: jupyter_python_version_matches
    exit-status: 0
    stdout: [
        "{{.Env.PYTHON_VERSION_JUPYTER}}"
    ]
  "which openssl":
    title: uses_system_openssl
    exit-status: 0
    stdout: [
      "/usr/bin/openssl"
    ]

  # test all R versions and packages
  {{ $rvers := mkSlice "/opt/R/4.0.5/bin/R" "/opt/R/4.1.3/bin/R" "/opt/R/4.2.3/bin/R" "/opt/R/4.3.2/bin/R"}}
  {{ $pkgs := .Vars.packages}}
  # loops the library command for each R version to ensure expected libraries exist for all.
  # notably, it also ensures that each expected R version exists and is runnable
  {{range $rver := $rvers }}
  {{$rver}} --slave -e 'library()' | cut -f 1 -d ' ' | grep -v '^Packages$' | grep -v '^$':
    exit-status: 0
    stdout:
    {{range $pkg := $pkgs}}
      - {{ $pkg }}
    {{end}}
  {{end}}

# Ensure Quarto works
  "/usr/local/bin/quarto check --quiet":
    title: quarto_check
    exit-status: 0

# Ensure TinyTeX is installed
  "quarto list tools":
    title: quarto_tinytex_installed
    exit-status: 0
    stderr:
      - "/tinytex\\s+External Installation/"
# TODO: Reenable this once Quarto supports custom install locations for TinyTeX, see quarto-dev/quarto-cli#11800.
#      - "/tinytex\\s+Up to date\\s+v\\d{4}\\.\\d{2}(\\.\\d{2})?\\s+v\\d{4}\\.\\d{2}(\\.\\d{2})?/"
