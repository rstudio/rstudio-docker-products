# Using dated tags from https://hub.docker.com/_/ubuntu/
FROM ubuntu:22.04
LABEL maintainer="Posit Docker <docker@posit.co>"

ARG DEBIAN_FRONTEND=noninteractive
ARG DISTRIBUTION=ubuntu-2204

ARG R_VERSION=3.6.3
ARG R_INSTALLER=r-${R_VERSION}_1_amd64.deb

ARG PYTHON_VERSION=3.9.5

# Locale configuration --------------------------------------------------------#
RUN apt-get update \
    && apt-get install -y --no-install-recommends locales \
    && localedef -i en_US -f UTF-8 en_US.UTF-8 \
    && rm -rf /var/lib/apt/lists/*

ENV LANG en_US.UTF-8
ENV LANGUAGE en_US:en
ENV LC_ALL en_US.UTF-8
ENV TZ=UTC

# Installation prerequisites --------------------------------------------------#
# curl is used to download things.
# libev-dev is required for most interactive Python applications.
RUN apt-get update \
    && apt-get install -y --no-install-recommends \
      curl \
      libev-dev \
    && rm -rf /var/lib/apt/lists/*

# System dependencies needed by popular R packages
# https://docs.rstudio.com/rsc/post-setup-tool/#install-system-dependencies

# Now, install the system requirements for R packages.
RUN apt-get update \
    && apt-get install -y --no-install-recommends \
      default-jdk \
      gdal-bin \
      git \
      gsfonts \
      imagemagick \
      libarchive-dev \
      libcairo2-dev \
      libcurl4-openssl-dev \
      libfontconfig1-dev \
      libfreetype6-dev \
      libfribidi-dev \
      libgdal-dev \
      libgeos-dev \
      libgl1-mesa-dev \
      libglpk-dev \
      libglu1-mesa-dev \
      libgmp3-dev \
      libharfbuzz-dev \
      libicu-dev \
      libjpeg-dev \
      libmagick++-dev \
      libmysqlclient-dev \
      libpng-dev \
      libpq-dev \
      libproj-dev \
      libsodium-dev \
      libssh2-1-dev \
      libssl-dev \
      libtiff-dev \
      libudunits2-dev \
      libv8-dev \
      libicu-dev \
      libxml2-dev \
      make \
      perl \
      tcl \
      tk \
      tk-dev \
      tk-table \
      unixodbc-dev \
      zlib1g-dev \
    && rm -rf /var/lib/apt/lists/*

# Install TinyTeX --------------------------------------------------------------#

# From https://github.com/rstudio/r-docker/blob/master/base/bionic/Dockerfile

SHELL ["/bin/bash", "-o", "pipefail", "-c"]
RUN apt-get update  \
    && apt-get install -y --no-install-recommends wget \
    && rm -rf /var/lib/apt/lists/* \
    && curl -fsSL "https://yihui.org/tinytex/install-bin-unix.sh" | sh \
    && /root/.TinyTeX/bin/*/tlmgr path remove \
    && mv /root/.TinyTeX/ /opt/TinyTeX \
    && /opt/TinyTeX/bin/*/tlmgr option sys_bin /usr/local/bin \
    && /opt/TinyTeX/bin/*/tlmgr path add \
    && rm -rf /var/lib/apt/lists/*

# Install R -------------------------------------------------------------------#

# Reference: https://docs.rstudio.com/resources/install-r/

# We are NOT linking one of these R versions into the PATH.
RUN curl -fsSL -O https://cdn.rstudio.com/r/${DISTRIBUTION}/pkgs/${R_INSTALLER} \
    && apt-get update \
    && apt-get install -f -y --no-install-recommends ./${R_INSTALLER} \
    && rm ${R_INSTALLER} \
    && rm -rf /var/lib/apt/lists/*


# Install Python --------------------------------------------------------------#

# Reference: https://docs.rstudio.com/resources/install-python/

# We are NOT linking one of these Python versions into the PATH.

RUN curl -fsSL -O https://cdn.rstudio.com/python/${DISTRIBUTION}/pkgs/python-${PYTHON_VERSION}_1_amd64.deb \
    && apt-get install -yq --no-install-recommends ./python-${PYTHON_VERSION}_1_amd64.deb \
    && rm -rf python-${PYTHON_VERSION}_1_amd64.deb \
    && /opt/python/${PYTHON_VERSION}/bin/python3 -m pip install --upgrade setuptools

# install quarto
ARG QUARTO_VERSION=1.3.340
COPY maybe_install_quarto.sh /tmp/maybe_install_quarto.sh
RUN /opt/R/${R_VERSION}/bin/R -e 'install.packages("odbc", repos="https://packagemanager.posit.co/cran/__linux__/jammy/latest")' \
    && /tmp/maybe_install_quarto.sh \
    && rm -f /tmp/maybe_install_quarto.sh
