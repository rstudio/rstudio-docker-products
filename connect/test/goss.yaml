user:
  rstudio-connect:
    exists: true
    uid: 999
    gid: 999

group:
  rstudio-connect:
    exists: true
    gid: 999

package:
  rstudio-connect:
    installed: true
  cracklib-runtime:
    installed: true
  # Necessary for `tlmgr` to work properly
  perl:
    installed: true

port:
  tcp6:3939:
    listening: true
    skip: false

file:
  /etc/rstudio-connect/license.lic:
    # Currently does not exist
    # Be sure it is NOT a directory
    exists: false
  /opt/rstudio-connect/:
    exists: true
  /opt/rstudio-connect/bin/connect:
    exists: true
  /usr/local/bin/tini:
    exists: true
# Ensure startup file exists
  /usr/local/bin/startup.sh:
    exists: true
    owner: root
    group: root
    filetype: file
# Ensure log files exist
  /var/log/rstudio/rstudio-connect/rstudio-connect.log:
    exists: true
  /opt/python/{{.Env.PYTHON_VERSION}}/bin/python:
    exists: true
  /opt/python/{{.Env.PYTHON_VERSION_ALT}}/bin/python:
    exists: true
  /opt/quarto/{{.Env.QUARTO_VERSION}}/bin/quarto:
    exists: true
  /usr/local/bin/quarto:
    exists: true
    filetype: symlink
  /opt/TinyTeX:
    exists: true
    filetype: directory
    mode: "0755"
  /opt/TinyTeX/bin/x86_64-linux/tlmgr:
    exists: true
    filetype: symlink
    mode: "0777"
    linked-to: ../../texmf-dist/scripts/texlive/tlmgr.pl
  /opt/TinyTeX/bin/x86_64-linux/tex:
    exists: true
    filetype: file
    mode: "0755"
  /opt/TinyTeX/bin/x86_64-linux/pdflatex:
    exists: true
    filetype: symlink
    linked-to: pdftex
    mode: "0777"
  /usr/local/bin/tex:
    exists: true
    filetype: symlink
    linked-to: /opt/TinyTeX/bin/x86_64-linux/tex
    mode: "0777"
  /usr/local/bin/pdflatex:
    exists: true
    filetype: symlink
    linked-to: /opt/TinyTeX/bin/x86_64-linux/pdflatex
    mode: "0777"
  /tmp/startup.log:
    exists: true
    contents:
    - "!Error: Couldn't read configuration file "
  # Check that `cracklib-runtime` is present so `chpasswd` works
  /var/cache/cracklib/cracklib_dict.pwd:
    exists: true

# Check product version
command:
  "/opt/rstudio-connect/bin/connect --version":
    title: connect_version_matches
    exit-status: 0
    stdout: [
      "{{ .Env.RSC_VERSION }}"
    ]
# Ensure correct R version
  "/opt/R/{{ .Env.R_VERSION }}/bin/R --version":
    title: r_version_match
    exit-status: 0
    stdout: [
      "{{ .Env.R_VERSION }}"
    ]
  "/opt/R/{{ .Env.R_VERSION_ALT }}/bin/R --version":
    title: r_version_match
    exit-status: 0
    stdout: [
      "{{ .Env.R_VERSION_ALT }}"
    ]

# Ensure correct python version
  "/opt/python/{{ .Env.PYTHON_VERSION }}/bin/python --version":
    title: python_version_matches
    exit-status: 0
    stdout: [
      "{{ .Env.PYTHON_VERSION }}"
    ]
  "/opt/python/{{ .Env.PYTHON_VERSION_ALT }}/bin/python --version":
    title: python_version_matches
    exit-status: 0
    stdout: [
      "{{ .Env.PYTHON_VERSION_ALT }}"
    ]

# Ensure correct Quarto version
  "/opt/quarto/{{ .Env.QUARTO_VERSION }}/bin/quarto --version":
    title: quarto_version_matches
    exit-status: 0
    stdout: [
      "{{ .Env.QUARTO_VERSION }}"
    ]
  "/usr/local/bin/quarto --version":
    title: quarto_symlink_version_matches
    exit-status: 0
    stdout: [
      "{{ .Env.QUARTO_VERSION }}"
    ]

# Ensure Quarto works
  "/opt/quarto/{{ .Env.QUARTO_VERSION }}/bin/quarto check --quiet":
    title: quarto_check
    exit-status: 0
  "/usr/local/bin/quarto check --quiet":
    title: quarto_check
    exit-status: 0

# TODO: Reenable this once Quarto supports custom install locations for TinyTeX, see quarto-dev/quarto-cli#11800.
# Ensure TinyTeX is installed
#  "quarto list tools":
#    title: quarto_tinytex_installed
#    exit-status: 0
#    stderr:
#      - "/tinytex\\s+Up to date\\s+v\\d{4}\\.\\d{2}(\\.\\d{2})?\\s+v\\d{4}\\.\\d{2}(\\.\\d{2})?/"
